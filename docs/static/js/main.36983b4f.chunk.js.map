{"version":3,"sources":["Layouts/Dashboard/dashboard.styles.jsx","components/bar-vulnerabilities-ip/bar-vulnerabilities-ip.styles.jsx","components/bar-vulnerabilities-ip/bar-vulnerabilities-ip.component.jsx","components/doughnut-vulnerabilities-cvss/doughnut-vulnerabilities-cvss.styles.jsx","util.js","components/doughnut-vulnerabilities-cvss/doughnut-vulnerabilities-cvss.component.jsx","components/line-years-vulnerabilities/line-vulnerabilities.styles.jsx","components/line-years-vulnerabilities/line-years-vulnerabilities.component.jsx","components/bar-ports/bar-ports.styles.jsx","components/bar-ports/bar-ports.component.jsx","components/bar-tags/bar-tags.styles.jsx","components/bar-tags/bar-tags.component.jsx","Layouts/Dashboard/dashboard.component.jsx","Layouts/ShodanData/shodan-data.styles.jsx","components/ip-information/ip-information.styles.jsx","components/cve-details/cve-details.styles.jsx","components/modal-references-cve/references-cve.component.jsx","components/cve-details/cve-details.component.jsx","components/ip-banner/ip-banner.styles.jsx","components/modal-ip-vulns-cvss/modal-ip-vulns-cvss.component.jsx","components/ip-banner/ip-banner.component.jsx","components/ip-information/ip-information.component.jsx","Layouts/ShodanData/shodan-data.component.jsx","Pages/MainPage/main-page.styles.jsx","Layouts/PriorityAtention/priority-atention.component.jsx","Pages/MainPage/main-page.component.jsx","components/rest-api/extract-data.component.jsx","components/header/header.styles.jsx","components/header/header.component.jsx","components/footer/footer.styles.jsx","components/footer/footer.component.jsx","App.js","index.js"],"names":["Wrapper","styled","div","Container","BarVulnerabilitiesIpComponent","info","state","labels","map","item","vuln","ip_str","datasets","label","backgroundColor","borderColor","data","length","borderWidth","options","indexAxis","scales","x","ticks","color","grid","offset","y","plugins","title","display","text","font","size","padding","legend","position","boxWidth","extractRepeatVariables","reduce","acc","includes","push","groupRepeatVariables","finalData","variable","countRepeatVariables","variables","array","count","finalCount","i","j","numberVulnerabilitiesCVSS","none","low","medium","high","critical","cvss","sumData","a","b","averageOrganizationalRisk","totalVuln","toFixed","DoughnutVulnerabilitiesCvssComponent","singleIp","sumVulnerabilitiesCVSS","LineYearsVulnerabilitiesComponent","years","item1","cve","substr","sort","BarPorts","ports","BarTags","tags","DashboardComponent","Grid","container","spacing","justifyContent","md","Accord","Accordion","AccordionDet","AccordionDetails","AccordionSum","AccordionSummary","CveGrid","Cve","References","Cvss","props","textcolor","Summary","Link","useStyles","makeStyles","theme","modal","alignItems","paper","border","boxShadow","shadows","maxHeight","overflow","ReferencesCveComponent","buttonName","references","classes","React","useState","open","setOpen","Button","onClick","variant","Modal","aria-labelledby","aria-describedby","className","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","index","href","target","rel","CveDetailsComponent","summary","textColor","xs","DataGridContainer","DataGrid","Ip","h2","Tags","strong","ModalIpVulnsCvssComponent","IpBannerComponent","ip","numVulns","org","isp","lastUpdate","country","city","asn","hostnames","domains","IpInformationComponent","ShodanDataComponent","vulns","last_update","country_name","Title","Description","p","Line","hr","DescriptionVariables","Variable","h3","InfoContainerRisk","InfoContainer","GridContainer","Loading","Message","PriorityAtentionComponent","sum","totalVulns","allCVSS","AVT","currentYear","Date","getFullYear","ART","average","averageRemediationTime","poe","openPorts","totalPorts","popI","pqt","tr","ep","console","log","po","impact","rf","riskFactor","key","orden","dataVuln","rows","id","risk","createData","Paper","sx","width","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","style","minWidth","TableBody","name","component","scope","MainPageComponent","ips","result","extractDataShow","setVuln","setData","useEffect","fetch","then","res","json","local","val","val1","k","extractVulns","error","ExtractData","total","AOR","colorRisk","loading","setLoading","setTimeout","Header","AppBar","Navigation","nav","CustomLinkNav","ImageContainer","Image","img","to","spy","smooth","src","alt","Footer","footer","Content","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36983b4f.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background-color: rgba(189, 203, 217);\r\n  //background-image: -webkit-linear-gradient(30deg, #34495e 50%, #212f3d 50%);\r\n  padding: 2em;\r\n  color: white;\r\n  text-align: center;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nexport const Wrapper = styled(Container)`\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport * as S from \"./bar-vulnerabilities-ip.styles\";\r\n\r\nconst BarVulnerabilitiesIpComponent = ({ info }) => {\r\n  const state = {\r\n    labels: info.map((item) => item.vuln.ip_str),\r\n    datasets: [\r\n      {\r\n        label: \"Vulnerabilities\",\r\n        backgroundColor: \"black\",\r\n        borderColor: info.map((item) =>\r\n          item.data.length > 100\r\n            ? \"red\"\r\n            : item.data.length > 50\r\n            ? \"yellow\"\r\n            : \"rgba(116, 238, 63)\"\r\n        ),\r\n        borderWidth: 2,\r\n        data: info.map((item) => item.data.length),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const config = {\r\n    indexAxis: \"y\",\r\n    scales: {\r\n      x: {\r\n        ticks: { color: \"black\" },\r\n        grid: {\r\n          offset: false,\r\n          color: \"black\",\r\n        },\r\n      },\r\n      y: {\r\n        ticks: { color: \"black\" },\r\n        grid: {\r\n          offset: false,\r\n          color: \"black\",\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: \"Cantidad de vulnerabilidades por IP\",\r\n        font: {\r\n          size: 20,\r\n        },\r\n        padding: 20,\r\n        color: \"black\",\r\n      },\r\n      legend: {\r\n        display: false,\r\n        position: \"top\",\r\n        labels: {\r\n          color: \"white\",\r\n          boxWidth: 20,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <Bar data={state} options={config} />\r\n    </S.Wrapper>\r\n  );\r\n};\r\n\r\nexport default BarVulnerabilitiesIpComponent;\r\n","import styled from \"styled-components\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nexport const Wrapper = styled(Container)`\r\n  width: 100%;\r\n`;\r\n","//Extrae las vulnerabilidades encontrada dentro de toda la info arrojada por la API\r\nexport const extractVulns = (data, vulns) => {\r\n  var val = [];\r\n  var val1 = [];\r\n  var count = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    if (typeof data[i].vulns != \"undefined\") {\r\n      val.push(data[i].vulns);\r\n    }\r\n  }\r\n  // console.log(Object.keys(val[0]));\r\n  for (let k = 0; k < vulns.length; k++) {\r\n    count = 0;\r\n    // console.log(vulns[k]);\r\n    for (let j = 0; j < val.length; j++) {\r\n      if (typeof val[j][vulns[k]] != \"undefined\") {\r\n        if (vulns[k].index === val[j][vulns[k]].index && count < 1) {\r\n          // console.log(val[j][vulns[k]]);\r\n          val[j][vulns[k]].cve = vulns[k];\r\n          val1.push(val[j][vulns[k]]);\r\n          count++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // console.log(val1.length);\r\n  return val1;\r\n};\r\n\r\n//Extrae solo una coincidencia de las variables repetidas\r\nexport const extractRepeatVariables = (data) => {\r\n  return data.reduce((acc, item) => {\r\n    if (!acc.includes(item)) {\r\n      acc.push(item);\r\n    }\r\n    return acc;\r\n  }, []);\r\n};\r\n\r\n//Agrupa todos las variables de un json en un solo array\r\nexport const groupRepeatVariables = (data) => {\r\n  const finalData = [];\r\n  data?.map((item) => item?.map((variable) => finalData.push(variable)));\r\n  return finalData;\r\n};\r\n\r\n//Cuenta las coincidencias dentro de un array, en base a las variables identificadas\r\nexport const countRepeatVariables = (variables, array) => {\r\n  let count;\r\n  const finalCount = [];\r\n  for (let i = 0; i < variables.length; i++) {\r\n    count = 0;\r\n    for (let j = 0; j < array.length; j++) {\r\n      if (variables[i] === array[j]) {\r\n        count = count + 1;\r\n      }\r\n    }\r\n    finalCount.push(count);\r\n  }\r\n  return finalCount;\r\n};\r\n\r\n//Cuenta las coincidencias de vulnerabilidades de acuerdo al rango CVSS\r\nexport const numberVulnerabilitiesCVSS = (info) => {\r\n  let none = 0;\r\n  let low = 0;\r\n  let medium = 0;\r\n  let high = 0;\r\n  let critical = 0;\r\n\r\n  for (let i = 0; i < info.length; i++) {\r\n    if (\r\n      info[i].cvss === 0 ||\r\n      info[i].cvss === \"\" ||\r\n      info[i].cvss === \"undefined\"\r\n    ) {\r\n      none++;\r\n    }\r\n    if (info[i].cvss > 0 && info[i].cvss < 4) {\r\n      low++;\r\n    }\r\n    if (info[i].cvss > 3.9 && info[i].cvss < 7) {\r\n      medium++;\r\n    }\r\n    if (info[i].cvss > 6.9 && info[i].cvss < 9) {\r\n      high++;\r\n    }\r\n    if (info[i].cvss > 8.9 && info[i].cvss < 11) {\r\n      critical++;\r\n    }\r\n    // console.log(none, low, medium);\r\n  }\r\n  return [none, low, medium, high, critical];\r\n};\r\n\r\n//Suma la cantidad de vulnerabilidades correspondientes al rango CVSS\r\nexport const sumVulnerabilitiesCVSS = (data) => {\r\n  let none = 0;\r\n  let low = 0;\r\n  let medium = 0;\r\n  let high = 0;\r\n  let critical = 0;\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    none += data[i][0];\r\n    low += data[i][1];\r\n    medium += data[i][2];\r\n    high += data[i][3];\r\n    critical += data[i][4];\r\n  }\r\n  return [none, low, medium, high, critical];\r\n};\r\n\r\n//Suma de valores dentro de un array\r\nexport const sumData = (data) => {\r\n  return data.reduce((a, b) => a + b, 0);\r\n};\r\n\r\n//Promedio de riesgo organizacional\r\nexport const averageOrganizationalRisk = (data, totalVuln) => {\r\n  return (data / totalVuln).toFixed(2);\r\n};\r\n\r\n//Promedio de nivel de remediacion\r\nexport const averageRemediationTime = (years, totalVuln) => {\r\n  const today = new Date();\r\n  const currentYear = today.getFullYear();\r\n  years = years?.map((item) => (currentYear - item) * 365);\r\n  const average = (sumData(years) / totalVuln).toFixed(2) * 1;\r\n  // console.log(average);\r\n  // const average = 130;\r\n  let ART;\r\n  if (average >= 280) ART = 1;\r\n  else if (average >= 140 && average < 280) ART = 0.5;\r\n  else if (average < 140) ART = 0.1;\r\n  return ART;\r\n};\r\n\r\nexport const riskFactor = (info, AVT) => {\r\n  console.log(info);\r\n  for (let i = 0; i < info?.length; i++) {\r\n    info[i].vuln.poe = info[i].vuln.poe * 1;\r\n    info[i].vuln.popI = info[i].vuln.popI * 1;\r\n    info[i].vuln.pqt = info[i].vuln.pqt * 1;\r\n    for (let j = 0; j < info[i]?.data?.length; j++) {\r\n      info[i].data[j].poe = info[i].vuln.poe * 1;\r\n      info[i].data[j].popI = info[i].vuln.popI * 1;\r\n      info[i].data[j].pqt = info[i].vuln.pqt * 1;\r\n      info[i].data[j].cvss = info[i].data[j].cvss * 1;\r\n      info[i].data[j].tr = info[i].data[j].tr * 1;\r\n      info[i].data[j].po =\r\n        (\r\n          ((info[i].data[j].tr + info[i].data[j].ep) / 2) *\r\n          ((info[i].vuln.poe + info[i].vuln.popI + info[i].vuln.pqt) / 3) *\r\n          AVT\r\n        ).toFixed(2) * 1;\r\n\r\n      info[i].data[j].impact = info[i].data[j].cvss / 10;\r\n\r\n      info[i].data[j].rf =\r\n        (info[i].data[j].po * info[i].data[j].impact).toFixed(2) * 1;\r\n      info[i].data[j].ip = info[i].vuln.ip_str;\r\n    }\r\n  }\r\n  return info;\r\n};\r\n\r\nexport const sortJSON = (data, key, orden) => {\r\n  // eslint-disable-next-line array-callback-return\r\n  return data.sort(function (a, b) {\r\n    const x = a[key],\r\n      y = b[key];\r\n\r\n    if (orden === \"asc\") {\r\n      return x < y ? -1 : x > y ? 1 : 0;\r\n    }\r\n\r\n    if (orden === \"desc\") {\r\n      return x > y ? -1 : x < y ? 1 : 0;\r\n    }\r\n  });\r\n};\r\n\r\n//Extraer solo resultados con vulnerabilidades\r\nexport const extractDataShow = (data) => {\r\n  const result = [];\r\n  for (let i = 0; i < data?.length; i++) {\r\n    if (data[i]?.data?.length > 1) {\r\n      // console.log(data[i].data.length);\r\n      result.push(data[i]);\r\n    }\r\n  }\r\n  // console.log(result);\r\n  return result;\r\n};\r\n","import React from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport * as S from \"./doughnut-vulnerabilities-cvss.styles\";\r\nimport { numberVulnerabilitiesCVSS, sumVulnerabilitiesCVSS } from \"../../util\";\r\n\r\nconst DoughnutVulnerabilitiesCvssComponent = ({ info, singleIp }) => {\r\n  let sum;\r\n  let data;\r\n  if (singleIp) {\r\n    //FUNCIONA PARA IP INDIVIDUAL\r\n    sum = numberVulnerabilitiesCVSS(info);\r\n  } else {\r\n    //FUNCIONA PARA MULTIPLES IP\r\n    data = info.map((item) => numberVulnerabilitiesCVSS(item.data));\r\n    sum = sumVulnerabilitiesCVSS(data);\r\n  }\r\n\r\n  const color = [\r\n    \"rgba(255, 255, 255)\",\r\n    \"rgba(116, 238, 63)\",\r\n    \"rgba(234, 231, 46)\",\r\n    \"rgba(237, 45, 19)\",\r\n    \"rgba(63, 62, 62)\",\r\n  ];\r\n  const state = {\r\n    labels: [\"None\", \"Low\", \"Medium\", \"High\", \"Critical\"],\r\n    datasets: [\r\n      {\r\n        label: \"CVSS Score\",\r\n        backgroundColor: color,\r\n        borderColor: \"black\",\r\n        borderWidth: 2,\r\n        data: sum,\r\n      },\r\n    ],\r\n  };\r\n  const config = {\r\n    indexAxis: \"y\",\r\n    scales: {\r\n      x: {\r\n        ticks: {\r\n          color: \"black\",\r\n          display: false,\r\n        },\r\n        grid: {\r\n          offset: false,\r\n          color: \"black\",\r\n        },\r\n      },\r\n      y: {\r\n        ticks: {\r\n          color: \"black\",\r\n          display: false,\r\n        },\r\n        grid: {\r\n          offset: false,\r\n          color: \"black\",\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: \"Common Vulnerability Scoring System\",\r\n        position: \"top\",\r\n        font: {\r\n          size: 20,\r\n        },\r\n        padding: 20,\r\n        color: \"black\",\r\n      },\r\n      legend: {\r\n        display: true,\r\n        position: \"left\",\r\n        labels: {\r\n          color: \"black\",\r\n          boxWidth: 20,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <Doughnut data={state} options={config} />\r\n    </S.Wrapper>\r\n  );\r\n};\r\n\r\nexport default DoughnutVulnerabilitiesCvssComponent;\r\n","import styled from \"styled-components\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nexport const Wrapper = styled(Container)`\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport * as S from \"./line-vulnerabilities.styles\";\r\nimport {\r\n  countRepeatVariables,\r\n  extractRepeatVariables,\r\n  groupRepeatVariables,\r\n} from \"../../util\";\r\n\r\nconst LineYearsVulnerabilitiesComponent = ({ info }) => {\r\n  const years = info.map((item) =>\r\n    item.data.map((item1) => item1.cve.substr(4, 4))\r\n  );\r\n  const labels = extractRepeatVariables(groupRepeatVariables(years)).sort();\r\n  const data = countRepeatVariables(labels, groupRepeatVariables(years));\r\n  const state = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: \"Vulnerabilities\",\r\n        backgroundColor: data.map((item) =>\r\n          item > 100 ? \"red\" : item > 50 ? \"yellow\" : \"rgba(116, 238, 63)\"\r\n        ),\r\n        borderColor: \"black\",\r\n        borderWidth: 2,\r\n        data: data,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const config = {\r\n    indexAxis: \"x\",\r\n    scales: {\r\n      x: {\r\n        ticks: { color: \"black\" },\r\n        grid: {\r\n          offset: false,\r\n          color: \"black\",\r\n        },\r\n      },\r\n      y: {\r\n        ticks: { color: \"black\" },\r\n        grid: {\r\n          offset: false,\r\n          color: \"black\",\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: \"Años de referencia en CVE-ID\",\r\n        font: {\r\n          size: 20,\r\n        },\r\n        padding: 20,\r\n        color: \"black\",\r\n      },\r\n      legend: {\r\n        display: false,\r\n        position: \"top\",\r\n        labels: {\r\n          color: \"black\",\r\n          boxWidth: 20,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <Line data={state} options={config} />\r\n    </S.Wrapper>\r\n  );\r\n};\r\n\r\nexport default LineYearsVulnerabilitiesComponent;\r\n","import styled from \"styled-components\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nexport const Wrapper = styled(Container)`\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport * as S from \"./bar-ports.styles\";\r\nimport {\r\n  countRepeatVariables,\r\n  extractRepeatVariables,\r\n  groupRepeatVariables,\r\n} from \"../../util\";\r\n\r\nconst BarPorts = ({ info }) => {\r\n  let ports;\r\n  ports = info?.map((item) => item?.vuln?.ports?.map((item1) => item1));\r\n  const labels = extractRepeatVariables(groupRepeatVariables(ports));\r\n  const data = countRepeatVariables(labels, groupRepeatVariables(ports));\r\n  const state = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: \"IPs\",\r\n        backgroundColor: \"black\",\r\n        borderColor: \"rgba(75,192,192,1)\",\r\n        borderWidth: 2,\r\n        data: data,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const config = {\r\n    indexAxis: \"x\",\r\n    scales: {\r\n      x: {\r\n        ticks: { color: \"black\" },\r\n        grid: {\r\n          offset: false,\r\n          color: \"black\",\r\n        },\r\n      },\r\n      y: {\r\n        ticks: { color: \"black\" },\r\n        grid: {\r\n          offset: false,\r\n          color: \"black\",\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: \"Puertos Abiertos\",\r\n        font: {\r\n          size: 20,\r\n        },\r\n        padding: 20,\r\n        color: \"black\",\r\n      },\r\n      legend: {\r\n        display: false,\r\n        position: \"top\",\r\n        labels: {\r\n          color: \"black\",\r\n          boxWidth: 20,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <Bar data={state} options={config} />\r\n    </S.Wrapper>\r\n  );\r\n};\r\n\r\nexport default BarPorts;\r\n","import styled from \"styled-components\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nexport const Wrapper = styled(Container)`\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport * as S from \"./bar-tags.styles\";\r\nimport {\r\n  countRepeatVariables,\r\n  extractRepeatVariables,\r\n  groupRepeatVariables,\r\n} from \"../../util\";\r\n\r\nconst BarTags = ({ info }) => {\r\n  const tags = info?.map((item) => item?.vuln?.tags?.map((item1) => item1));\r\n  const labels = extractRepeatVariables(groupRepeatVariables(tags));\r\n  const data = countRepeatVariables(labels, groupRepeatVariables(tags));\r\n  const state = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: \"IPs\",\r\n        backgroundColor: \"black\",\r\n        borderColor: \"rgba(75,192,192,1)\",\r\n        borderWidth: 2,\r\n        data: data,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const config = {\r\n    indexAxis: \"x\",\r\n    scales: {\r\n      x: {\r\n        ticks: { color: \"black\" },\r\n        grid: {\r\n          offset: false,\r\n          color: \"black\",\r\n        },\r\n      },\r\n      y: {\r\n        ticks: { color: \"black\" },\r\n        grid: {\r\n          offset: false,\r\n          color: \"black\",\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: \"Query Tags\",\r\n        font: {\r\n          size: 20,\r\n        },\r\n        padding: 20,\r\n        color: \"black\",\r\n      },\r\n      legend: {\r\n        display: false,\r\n        position: \"top\",\r\n        labels: {\r\n          color: \"black\",\r\n          boxWidth: 20,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <Bar data={state} options={config} />\r\n    </S.Wrapper>\r\n  );\r\n};\r\n\r\nexport default BarTags;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport * as S from \"./dashboard.styles\";\r\nimport BarVulnerabilitiesIpComponent from \"../../components/bar-vulnerabilities-ip/bar-vulnerabilities-ip.component\";\r\nimport DoughnutVulnerabilitiesCvssComponen from \"../../components/doughnut-vulnerabilities-cvss/doughnut-vulnerabilities-cvss.component\";\r\nimport LineYearsVulnerabilitiesComponent from \"../../components/line-years-vulnerabilities/line-years-vulnerabilities.component\";\r\nimport BarPorts from \"../../components/bar-ports/bar-ports.component\";\r\nimport BarTags from \"../../components/bar-tags/bar-tags.component\";\r\n\r\nconst DashboardComponent = ({ info }) => {\r\n  return (\r\n    <S.Wrapper>\r\n      <Grid container spacing={3} justifyContent=\"center\">\r\n        <Grid item md={6}>\r\n          <BarVulnerabilitiesIpComponent info={info} />\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <BarPorts info={info} />\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <LineYearsVulnerabilitiesComponent info={info} />\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <BarTags info={info} />\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <DoughnutVulnerabilitiesCvssComponen info={info} singleIp={false} />\r\n        </Grid>\r\n      </Grid>\r\n    </S.Wrapper>\r\n  );\r\n};\r\nexport default DashboardComponent;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background-color: #17202a;\r\n  background-image: -webkit-linear-gradient(30deg, #34495e 50%, #212f3d 50%);\r\n  //height: 50em;\r\n  color: white;\r\n  text-align: center;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\n\r\nexport const Accord = styled(Accordion)`\r\n  //background-color: #17202a;\r\n  background-image: -webkit-linear-gradient(30deg, #34495e 50%, #212f3d 50%);\r\n  //color: white;\r\n`;\r\n\r\nexport const AccordionDet = styled(AccordionDetails)`\r\n  background-color: black;\r\n`;\r\n\r\nexport const AccordionSum = styled(AccordionSummary)``;\r\n","import styled from \"styled-components\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\n\r\nexport const Wrapper = styled(Container)`\r\n  color: white;\r\n  border: 2px solid white;\r\n  text-align: center;\r\n  padding: 0.5em;\r\n`;\r\n\r\nexport const CveGrid = styled(Grid)``;\r\n\r\nexport const Cve = styled(Grid)`\r\n  border: 1px solid black;\r\n`;\r\nexport const References = styled(Grid)`\r\n  border: 1px solid black;\r\n`;\r\nexport const Cvss = styled(Grid)`\r\n  background-color: ${(props) => props.color};\r\n  color: ${(props) => props.textcolor};\r\n  border: 1px solid black;\r\n`;\r\nexport const Summary = styled(Grid)`\r\n  border: 1px solid black;\r\n`;\r\n\r\nexport const Link = styled.a`\r\n  color: white;\r\n  background-color: rgba(116, 238, 63, 0.3);\r\n  padding: 0.2em;\r\n  font-size: 0.9em;\r\n  display: inline-block;\r\n  text-align: center;\r\n  margin-right: 0.3em;\r\n  margin-bottom: 0.3em;\r\n  border-radius: 5px;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    background-color: rgba(116, 238, 63, 0.5);\r\n    font-weight: 500;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: \"#E3DFDF\",\r\n    border: \"3px solid #66FA00\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    maxHeight: \"70%\",\r\n    overflow: \"scroll\",\r\n  },\r\n}));\r\n\r\nexport default function ReferencesCveComponent({ buttonName, references }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button color={\"secondary\"} onClick={handleOpen} variant=\"outlined\">\r\n        {buttonName}\r\n      </Button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            {references.map((item, index) => (\r\n              <p>\r\n                <a\r\n                  key={index + item}\r\n                  href={item}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  {item}{\" \"}\r\n                </a>\r\n              </p>\r\n            ))}\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as S from \"./cve-details.styles\";\r\nimport TransitionsModal from \"../modal-references-cve/references-cve.component\";\r\n\r\nconst CveDetailsComponent = ({ cve, references, cvss, summary }) => {\r\n  let color = \"\";\r\n  let textColor = \"black\";\r\n\r\n  if (cvss > 0 && cvss < 4) {\r\n    color = \"green\";\r\n    textColor = \"white\";\r\n  }\r\n\r\n  if (cvss > 3.9 && cvss < 7) {\r\n    color = \"yellow\";\r\n  }\r\n  if (cvss > 6.9 && cvss < 9) {\r\n    color = \"red\";\r\n    textColor = \"white\";\r\n  }\r\n  if (cvss > 8.9 && cvss < 11) {\r\n    color = \"#34495E\";\r\n    textColor = \"white\";\r\n  }\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <S.CveGrid container justifyContent=\"center\" alignItems=\"center\">\r\n        <S.Cve item xs={3}>\r\n          <S.Link\r\n            href={`https://nvd.nist.gov/vuln/detail/` + cve}\r\n            target=\"_blank\"\r\n          >\r\n            {cve}\r\n          </S.Link>\r\n        </S.Cve>\r\n        <S.References item xs={3}>\r\n          <TransitionsModal\r\n            buttonName=\"Solution Links\"\r\n            references={references}\r\n          />\r\n        </S.References>\r\n        <S.Cvss item xs={3} color={color} textcolor={textColor}>\r\n          {cvss}\r\n        </S.Cvss>\r\n        <S.Summary item xs={12}>\r\n          {summary}\r\n        </S.Summary>\r\n      </S.CveGrid>\r\n    </S.Wrapper>\r\n  );\r\n};\r\nexport default CveDetailsComponent;\r\n","import styled from \"styled-components\";\r\n\r\nimport { Container, Grid } from \"@material-ui/core\";\r\n\r\nexport const Wrapper = styled(Container)`\r\n  background-color: #17202a;\r\n  background-image: -webkit-linear-gradient(30deg, #34495e 50%, #212f3d 50%);\r\n  color: white;\r\n  border: 2px solid white;\r\n  padding: 0.5em;\r\n`;\r\n\r\nexport const DataGridContainer = styled(Grid)`\r\n  padding-top: 1em;\r\n  padding-bottom: 1em;\r\n`;\r\nexport const DataGrid = styled(Grid)`\r\n  padding-top: 1em;\r\n  padding-bottom: 1em;\r\n`;\r\nexport const Ip = styled.h2``;\r\n\r\nexport const Tags = styled.strong`\r\n  color: white;\r\n  background-color: rgba(116, 238, 63, 0.3);\r\n  padding: 0.2em;\r\n  font-size: 0.9em;\r\n  display: inline-block;\r\n  text-align: center;\r\n  margin-right: 0.3em;\r\n  margin-bottom: 0.3em;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const Link = styled.a`\r\n  color: white;\r\n  background-color: rgba(116, 238, 63, 0.3);\r\n  padding: 0.2em;\r\n  font-size: 0.9em;\r\n  display: inline-block;\r\n  text-align: center;\r\n  margin-right: 0.3em;\r\n  margin-bottom: 0.3em;\r\n  border-radius: 5px;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    background-color: rgba(116, 238, 63, 0.5);\r\n    font-weight: 500;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport DoughnutVulnerabilitiesCvssComponent from \"../doughnut-vulnerabilities-cvss/doughnut-vulnerabilities-cvss.component\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: \"rgba(189, 203, 217)\",\r\n    border: \"2px solid red\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function ModalIpVulnsCvssComponent({ buttonName, info }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button\r\n        color={\"inherit\"}\r\n        onClick={handleOpen}\r\n        variant=\"outlined\"\r\n        display=\"none\"\r\n      >\r\n        {buttonName}\r\n      </Button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <DoughnutVulnerabilitiesCvssComponent info={info} singleIp={true} />\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as S from \"./ip-banner.styles\";\r\nimport ModalIpVulnsCvssComponent from \"../modal-ip-vulns-cvss/modal-ip-vulns-cvss.component\";\r\n\r\nconst IpBannerComponent = ({\r\n  ip,\r\n  numVulns,\r\n  org,\r\n  isp,\r\n  data,\r\n  lastUpdate,\r\n  country,\r\n  city,\r\n  asn,\r\n  tags,\r\n  ports,\r\n  hostnames,\r\n  domains,\r\n}) => {\r\n  let text = \"\";\r\n  if (numVulns > 0) {\r\n    text = `Se han detectado ${numVulns} vulnerabilidades`;\r\n  } else {\r\n    text = \"No se han detectado vulnerabilidades\";\r\n  }\r\n  // console.log(tags);\r\n  return (\r\n    <S.Wrapper>\r\n      <S.DataGridContainer\r\n        container\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={3}\r\n      >\r\n        <S.DataGrid item xs={3}>\r\n          <S.Ip>IP: {ip}</S.Ip>\r\n        </S.DataGrid>\r\n        <S.DataGrid item xs={3}>\r\n          {text}\r\n        </S.DataGrid>\r\n        <S.DataGrid item xs={3}>\r\n          ORG: {org}\r\n        </S.DataGrid>\r\n        <S.DataGrid item xs={3}>\r\n          ISP: {isp}\r\n        </S.DataGrid>\r\n        <S.DataGrid item xs={3}>\r\n          Last_Update: {lastUpdate}\r\n        </S.DataGrid>\r\n        <S.DataGrid item xs={3}>\r\n          Location: {country} - {city}\r\n        </S.DataGrid>\r\n        <S.DataGrid item xs={3}>\r\n          ASN: {asn}\r\n        </S.DataGrid>\r\n        {tags && (\r\n          <S.DataGrid item xs={3}>\r\n            Tags:{\" \"}\r\n            {tags.map((item, index) => (\r\n              <S.Tags key={item + index}>{item}</S.Tags>\r\n            ))}\r\n          </S.DataGrid>\r\n        )}\r\n        {ports && (\r\n          <S.DataGrid item xs={3}>\r\n            Ports:{\" \"}\r\n            {ports.map((item, index) => (\r\n              <S.Link\r\n                href={`https://` + ip + \":\" + item}\r\n                target=\"_blank\"\r\n                key={item + index}\r\n              >\r\n                {item}\r\n              </S.Link>\r\n              // <S.Tags>{item}</S.Tags>\r\n            ))}\r\n          </S.DataGrid>\r\n        )}\r\n        {hostnames && (\r\n          <S.DataGrid item xs={3}>\r\n            Hostnames:{\" \"}\r\n            {hostnames.map((item, index) => (\r\n              <S.Link\r\n                href={`https://` + item}\r\n                target=\"_blank\"\r\n                key={item + index}\r\n              >\r\n                {item}\r\n              </S.Link>\r\n            ))}\r\n          </S.DataGrid>\r\n        )}\r\n        {domains && (\r\n          <S.DataGrid item xs={3}>\r\n            Domain: {domains.map((item) => item)}\r\n          </S.DataGrid>\r\n        )}\r\n        {numVulns > 0 && (\r\n          <S.DataGrid item xs={3}>\r\n            <ModalIpVulnsCvssComponent\r\n              info={data}\r\n              buttonName=\"RESUMEN CVSS +\"\r\n            />\r\n          </S.DataGrid>\r\n        )}\r\n      </S.DataGridContainer>\r\n    </S.Wrapper>\r\n  );\r\n};\r\n\r\nexport default IpBannerComponent;\r\n","import React from \"react\";\r\nimport * as S from \"./ip-information.styles\";\r\nimport CveDetailsComponent from \"../cve-details/cve-details.component\";\r\nimport IpBannerComponent from \"../ip-banner/ip-banner.component\";\r\n\r\nconst IpInformationComponent = ({\r\n  ip,\r\n  data,\r\n  org,\r\n  isp,\r\n  lastUpdate,\r\n  country,\r\n  city,\r\n  asn,\r\n  tags,\r\n  ports,\r\n  hostnames,\r\n  domains,\r\n}) => {\r\n  return (\r\n    <S.Accord>\r\n      <S.AccordionSum>\r\n        <IpBannerComponent\r\n          ip={ip}\r\n          numVulns={data.length}\r\n          org={org}\r\n          isp={isp}\r\n          data={data}\r\n          lastUpdate={`${lastUpdate?.substr(0, 10)} ${lastUpdate?.substr(\r\n            11,\r\n            8\r\n          )}`}\r\n          country={country}\r\n          city={city}\r\n          asn={asn}\r\n          tags={tags}\r\n          ports={ports}\r\n          hostnames={hostnames}\r\n          domains={domains}\r\n        />\r\n      </S.AccordionSum>\r\n      {data.map((item, index) => (\r\n        <S.AccordionDet key={`SHdata-${ip}` + index}>\r\n          <CveDetailsComponent\r\n            cve={item.cve}\r\n            cvss={item.cvss}\r\n            summary={item.summary}\r\n            references={item.references}\r\n          />\r\n        </S.AccordionDet>\r\n      ))}\r\n    </S.Accord>\r\n  );\r\n};\r\n\r\nexport default IpInformationComponent;\r\n","import React from \"react\";\r\nimport * as S from \"./shodan-data.styles\";\r\nimport IpInformationComponent from \"../../components/ip-information/ip-information.component\";\r\n\r\nconst ShodanDataComponent = ({ info }) => {\r\n  return (\r\n    <S.Wrapper>\r\n      {info.map((item, index) =>\r\n        typeof item.vuln.vulns != \"undefined\" ? (\r\n          <>\r\n            <IpInformationComponent\r\n              key={`sh` - index - item.vuln.ip_str}\r\n              ip={item.vuln.ip_str}\r\n              data={item.data}\r\n              org={item.vuln.org}\r\n              isp={item.vuln.isp}\r\n              lastUpdate={item.vuln.last_update}\r\n              country={item.vuln.country_name}\r\n              city={item.vuln.city}\r\n              asn={item.vuln.asn}\r\n              tags={item.vuln.tags}\r\n              ports={item.vuln.ports}\r\n              hostnames={item.vuln.hostnames}\r\n              domains={item.vuln.domains}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <IpInformationComponent\r\n              key={`shSV` - index - item.vuln.ip_str}\r\n              ip={item.vuln.ip_str}\r\n              data={[]}\r\n              org={item.vuln.org}\r\n              isp={item.vuln.isp}\r\n              lastUpdate={item.vuln.last_update}\r\n              country={item.vuln.country_name}\r\n              city={item.vuln.city}\r\n              asn={item.vuln.asn}\r\n              tags={item.vuln.tags}\r\n              ports={item.vuln.ports}\r\n              hostnames={item.vuln.hostnames}\r\n              domains={item.vuln.domains}\r\n            />\r\n          </>\r\n        )\r\n      )}\r\n    </S.Wrapper>\r\n  );\r\n};\r\nexport default ShodanDataComponent;\r\n","import styled from \"styled-components\";\r\nimport { Grid } from \"@material-ui/core\";\r\nexport const Wrapper = styled.div`\r\n  padding-top: 100px;\r\n  background-color: rgba(189, 203, 217);\r\n`;\r\nexport const Title = styled.h2`\r\n  margin: 0;\r\n  padding: 0.5em;\r\n  background-color: black;\r\n  color: white;\r\n  text-align: center;\r\n`;\r\nexport const Description = styled.p`\r\n  margin: 0;\r\n  padding: 0.5em;\r\n  background-color: black;\r\n  color: white;\r\n  text-align: right;\r\n  font-size: 1.8em;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const Line = styled.hr`\r\n  border: 4px solid green;\r\n  margin: 0;\r\n`;\r\n\r\nexport const DescriptionVariables = styled.p`\r\n  color: black;\r\n  background-color: rgba(116, 238, 63, 0.5);\r\n  border-radius: 10px;\r\n  margin: 0;\r\n  padding: 0.5em;\r\n  text-align: left;\r\n  font-size: 1.2em;\r\n`;\r\n\r\nexport const Variable = styled.h3`\r\n  color: ${(props) => props.color ?? \"white\"};\r\n  padding: 1em;\r\n`;\r\nexport const InfoContainerRisk = styled.div`\r\n  background-color: ${(props) => props.color};\r\n  height: 100%;\r\n`;\r\nexport const InfoContainer = styled.div`\r\n  background-color: black;\r\n  height: 100%;\r\n`;\r\n\r\nexport const GridContainer = styled(Grid)`\r\n  padding: 2em;\r\n`;\r\n\r\nexport const Loading = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-top: 15em;\r\n  padding-bottom: 15em;\r\n`;\r\n\r\nexport const Message = styled.h2`\r\n  color: #7ed321;\r\n  font-size: 30px;\r\n`;\r\n","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport {\r\n  averageOrganizationalRisk,\r\n  averageRemediationTime,\r\n  extractRepeatVariables,\r\n  groupRepeatVariables,\r\n  riskFactor,\r\n  sortJSON,\r\n  sumData,\r\n} from \"../../util\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\n// const StyledTableCell = withStyles((theme) => ({\r\n//   head: {\r\n//     backgroundColor: theme.palette.common.black,\r\n//     color: theme.palette.common.white,\r\n//     position: \"sticky\",\r\n//   },\r\n//   body: {\r\n//     fontSize: 14,\r\n//   },\r\n// }))(TableCell);\r\n\r\n// const StyledTableRow = withStyles((theme) => ({\r\n//   root: {\r\n//     backgroundColor: \"rgba(189,203,217)\",\r\n//   },\r\n// }))(TableRow);\r\n\r\nfunction createData(id, ip, cve, cvss, tr, ep, poe, popI, pqt, risk) {\r\n  return { id, ip, cve, cvss, tr, ep, poe, popI, pqt, risk };\r\n}\r\n\r\n// const useStyles = makeStyles({\r\n//   table: {\r\n//     minWidth: 700,\r\n//   },\r\n// });\r\n\r\nconst PriorityAtentionComponent = ({ info }) => {\r\n  //GLOBAL VARIABLES\r\n  const sum = info.map((item) => item.data.length);\r\n  const totalVulns = sumData(sum);\r\n\r\n  const allCVSS = groupRepeatVariables(\r\n    info?.map((item) => item?.data?.map((data) => data.cvss * 1))\r\n  );\r\n  const AOR = averageOrganizationalRisk(sumData(allCVSS), totalVulns);\r\n  // console.log(AOR);\r\n\r\n  const years = groupRepeatVariables(\r\n    info.map((item) => item?.data?.map((item1) => item1?.cve?.substr(4, 4) * 1))\r\n  );\r\n  const AVT = averageRemediationTime(years, totalVulns);\r\n\r\n  //IP VARIABLES\r\n  //Probability of Occurrence of an Event in the IP (POE)\r\n  info?.map(\r\n    (item) =>\r\n      (item.vuln.poe = ((item?.data?.length * 1) / totalVulns).toFixed(2))\r\n  );\r\n  //Probability of Open Ports (POP)\r\n  const openPorts = info.map((item) => item?.vuln?.ports);\r\n  const totalPorts = extractRepeatVariables(groupRepeatVariables(openPorts));\r\n  info?.map(\r\n    (item) =>\r\n      (item.vuln.popI =\r\n        item?.vuln?.ports?.length * 1 >= 10\r\n          ? 1\r\n          : ((item?.vuln?.ports?.length * 1) / totalPorts.length).toFixed(2))\r\n  );\r\n\r\n  //Query Tags (QT)\r\n  info?.map(\r\n    (item) => (item.vuln.pqt = item?.vuln?.tags?.length * 1 > 0 ? 1 : 0)\r\n  );\r\n\r\n  //VULNERABILITY VARIABLES\r\n  //Total References (TR)\r\n  info?.map((item) =>\r\n    item?.data?.map(\r\n      (variable) =>\r\n        (variable.tr =\r\n          variable?.references?.length > 10\r\n            ? 1\r\n            : (variable?.references?.length / 10).toFixed(2))\r\n    )\r\n  );\r\n\r\n  //Exploitation Probability (EP)\r\n  info?.map((item) =>\r\n    item?.data?.map(\r\n      (variable) =>\r\n        (variable.ep =\r\n          variable?.cvss * 1 >= 7\r\n            ? 1\r\n            : variable?.cvss * 1 >= 4 && variable?.cvss * 1 < 7\r\n            ? 0.5\r\n            : 0.1)\r\n    )\r\n  );\r\n\r\n  //RISK FACTOR\r\n  info = riskFactor(info, AVT, AOR);\r\n  const dataVuln = sortJSON(\r\n    groupRepeatVariables(\r\n      info?.map((item) => item?.data?.map((item1) => item1))\r\n    ),\r\n    \"rf\",\r\n    \"desc\"\r\n  );\r\n  console.log(info);\r\n\r\n  // const classes = useStyles();\r\n  const rows = [];\r\n  dataVuln?.map(({ ip, cve, cvss, tr, ep, poe, popI, pqt, rf }, index) =>\r\n    rows.push(\r\n      createData(\r\n        `ESP-vuln-` + (index + 1) + `-` + cve,\r\n        ip,\r\n        cve,\r\n        cvss,\r\n        tr,\r\n        ep,\r\n        poe,\r\n        popI,\r\n        pqt,\r\n        rf\r\n      )\r\n    )\r\n  );\r\n  // console.log(rows);\r\n\r\n  return (\r\n    <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n      <TableContainer sx={{ maxHeight: \"440px\" }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell key=\"id\" align=\"center\" style={{ minWidth: 100 }}>\r\n                ID\r\n              </TableCell>\r\n              <TableCell key=\"ip\" align=\"center\" style={{ minWidth: 90 }}>\r\n                IP\r\n              </TableCell>\r\n              <TableCell key=\"cve\" align=\"center\" style={{ minWidth: 90 }}>\r\n                CVE\r\n              </TableCell>\r\n              <TableCell key=\"cvss\" align=\"center\" style={{ minWidth: 90 }}>\r\n                CVSS\r\n              </TableCell>\r\n              <TableCell key=\"tr\" align=\"center\" style={{ minWidth: 90 }}>\r\n                TR\r\n              </TableCell>\r\n              <TableCell key=\"ep\" align=\"center\" style={{ minWidth: 90 }}>\r\n                EP\r\n              </TableCell>\r\n              <TableCell key=\"poe\" align=\"center\" style={{ minWidth: 90 }}>\r\n                POE\r\n              </TableCell>\r\n              <TableCell key=\"popI\" align=\"center\" style={{ minWidth: 90 }}>\r\n                POP\r\n              </TableCell>\r\n              <TableCell key=\"pqt\" align=\"center\" style={{ minWidth: 90 }}>\r\n                PQT\r\n              </TableCell>\r\n              <TableCell key=\"rf\" align=\"center\" style={{ minWidth: 90 }}>\r\n                RISK FACTOR\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(\r\n              (\r\n                { ip, cve, cvss, tr, ep, poe, popI, pqt, risk, name, id },\r\n                index\r\n              ) => (\r\n                <TableRow key={index + cve}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {id}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{ip}</TableCell>\r\n                  <TableCell align=\"center\">{cve}</TableCell>\r\n                  <TableCell align=\"center\">{cvss}</TableCell>\r\n                  <TableCell align=\"center\">{tr}</TableCell>\r\n                  <TableCell align=\"center\">{ep}</TableCell>\r\n                  <TableCell align=\"center\">{poe}</TableCell>\r\n                  <TableCell align=\"center\">{popI}</TableCell>\r\n                  <TableCell align=\"center\">{pqt}</TableCell>\r\n                  <TableCell align=\"center\">{risk}</TableCell>\r\n                </TableRow>\r\n              )\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\nexport default PriorityAtentionComponent;\r\n","import React, { useEffect, useState } from \"react\";\nimport DashboardComponent from \"../../Layouts/Dashboard/dashboard.component\";\nimport ShodanData from \"../../Layouts/ShodanData/shodan-data.component\";\nimport { ExtractData } from \"../../components/rest-api/extract-data.component\";\nimport HashLoader from \"react-spinners/HashLoader\";\n\nimport * as S from \"./main-page.styles\";\nimport PriorityAtentionComponent from \"../../Layouts/PriorityAtention/priority-atention.component\";\nimport {\n  averageOrganizationalRisk,\n  extractDataShow,\n  groupRepeatVariables,\n  sumData,\n} from \"../../util\";\nimport { Grid } from \"@material-ui/core\";\n\nconst MainPageComponent = () => {\n  //INFO ESPE\n  const [ips] = useState([\n    \"192.188.58.61\",\n    \"192.188.58.50\",\n    \"192.188.58.45\",\n    // \"190.15.135.10\", //No tiene vulnerabilidades\n    // \"192.188.58.32\", //No tiene vulnerabilidades\n    // \"192.188.58.40\", //No tiene vulnerabilidades\n    // \"192.188.58.47\", //No tiene vulnerabilidades\n    // \"192.188.58.70\", //No tiene vulnerabilidades\n    // \"192.188.58.99\", //No tiene vulnerabilidades\n    \"192.188.58.59\",\n    \"192.188.58.63\",\n    \"192.188.58.78\",\n    // \"192.188.58.76\", //No tiene vulnerabilidades\n    \"192.188.58.180\",\n    \"192.188.58.75\",\n  ]);\n  const orgName = \"Escuela Politecnica del Ejercito\";\n\n  // INFO UTE\n  // const [ips] = useState([\"192.188.51.24\", \"192.188.51.6\"]);\n  // const orgName = \"Universidad Tecnologica Equinoccial\";\n\n  //INFO EPN\n  // const [ips] = useState([\n  //   \"190.96.108.131\",\n  //   \"201.218.11.43\",\n  //   \"190.96.111.110\",\n  //   \"190.96.108.133\",\n  //   \"190.96.108.132\",\n  //   \"190.96.111.111\",\n  //   \"190.96.111.112\",\n  // ]);\n  // const orgName = \"Escuela Politecnica Nacional\";\n\n  const info = extractDataShow(ips.map((item) => ExtractData(item)));\n  const sum = info?.map((item) => item?.data?.length);\n  const total = sumData(sum);\n  const allCVSS = groupRepeatVariables(\n    info?.map((item) => item?.data?.map((data) => data.cvss * 1))\n  );\n  const AOR = averageOrganizationalRisk(sumData(allCVSS), total);\n  let years = groupRepeatVariables(\n    info.map((item) => item?.data?.map((item1) => item1?.cve?.substr(4, 4) * 1))\n  );\n  const today = new Date();\n  const currentYear = today.getFullYear();\n  years = years?.map((item) => (currentYear - item) * 365);\n  const average = (sumData(years) / total).toFixed(2) * 1;\n  const colorRisk =\n    AOR > 0 && AOR <= 3.9\n      ? \"rgba(116, 238, 63)\"\n      : AOR > 3.9 && AOR <= 6.9\n      ? \"rgba(234, 231, 46)\"\n      : AOR > 6.9 && AOR <= 8.9\n      ? \"rgba(237, 45, 19)\"\n      : \"rgba(63, 62, 62)\";\n\n  //LOADING\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 8000);\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <S.Loading>\n          <HashLoader size={100} color={\"#7ED321\"} loading={loading} />\n          <S.Message>CARGANDO.....</S.Message>\n        </S.Loading>\n      ) : (\n        <S.Wrapper id=\"top\">\n          <S.Line />\n          <section id=\"gi\">\n            <S.Title>Informacion General de la Organizacion</S.Title>\n            <S.GridContainer container justifyContent=\"center\" spacing={3}>\n              <Grid item md={4}>\n                <S.InfoContainer>\n                  <S.Variable>Organizacion</S.Variable>\n                  <S.Description>{orgName}</S.Description>\n                  <S.Line />\n                </S.InfoContainer>\n              </Grid>\n              <Grid item md={4}>\n                <S.InfoContainer>\n                  <S.Variable>\n                    Total de vulnerabilidades identificadas\n                  </S.Variable>\n                  <S.Description>{total}</S.Description>\n                  <S.Line />\n                </S.InfoContainer>\n              </Grid>\n              <Grid item md={4}>\n                <S.InfoContainer>\n                  <S.Variable>Total de IP escaneadas</S.Variable>\n                  <S.Description>{ips?.length}</S.Description>\n                  <S.Line />\n                </S.InfoContainer>\n              </Grid>\n              <Grid item md={4}>\n                <S.InfoContainer>\n                  <S.Variable>Total de IP con Vulnerabilidades</S.Variable>\n                  <S.Description>{info?.length}</S.Description>\n                  <S.Line />\n                </S.InfoContainer>\n              </Grid>\n              <Grid item md={4}>\n                <S.InfoContainerRisk color={colorRisk}>\n                  <S.Variable\n                    color={colorRisk === \"rgba(63, 62, 62)\" ? \"white\" : \"black\"}\n                  >\n                    Riesgo Promedio de la Organizacion (AOR)\n                  </S.Variable>\n                  <S.Description>{AOR}</S.Description>\n                  <S.Line />\n                </S.InfoContainerRisk>\n              </Grid>\n              <Grid item md={4}>\n                <S.InfoContainer>\n                  <S.Variable>\n                    Tiempo Promedio de Vulnerabilidades (AVT)\n                  </S.Variable>\n                  <S.Description>{average} dias</S.Description>\n                  <S.Line />\n                </S.InfoContainer>\n              </Grid>\n            </S.GridContainer>\n          </section>\n          <section id=\"vi\">\n            <S.Line />\n            <S.Title>Informacion General de Vulnerabilidades</S.Title>\n            <DashboardComponent info={info} />\n          </section>\n          <section id=\"db\">\n            <S.Line />\n            <S.Title>IP Banner y Vulnerabilidades Detalladas</S.Title>\n            <ShodanData info={info} />\n          </section>\n          <section id=\"pt\">\n            <S.Line />\n            <S.Title>Priorizacion de Vulnerabilidades</S.Title>\n            <S.Line />\n            <S.Title>Descripcion Variables de Entorno</S.Title>\n            <S.GridContainer container justifyContent=\"center\" spacing={3}>\n              <Grid item md={4}>\n                <S.DescriptionVariables>\n                  <strong>CVE: </strong> Common Vulnerabilities and Exposures\n                </S.DescriptionVariables>\n              </Grid>\n              <Grid item md={4}>\n                <S.DescriptionVariables>\n                  <strong>CVSS: </strong> Common Vulnerability Scoring System\n                </S.DescriptionVariables>\n              </Grid>\n              <Grid item md={4}>\n                <S.DescriptionVariables>\n                  <strong>TR: </strong> Total References\n                </S.DescriptionVariables>\n              </Grid>\n              <Grid item md={4}>\n                <S.DescriptionVariables>\n                  <strong>EP: </strong> Exploitation Probability\n                </S.DescriptionVariables>\n              </Grid>\n              <Grid item md={4}>\n                <S.DescriptionVariables>\n                  <strong>POE: </strong> Probability of Occurrence of an Event\n                  in the IP\n                </S.DescriptionVariables>\n              </Grid>\n              <Grid item md={4}>\n                <S.DescriptionVariables>\n                  <strong>POP: </strong> Probability of Open Ports\n                </S.DescriptionVariables>\n              </Grid>\n              <Grid item md={4}>\n                <S.DescriptionVariables>\n                  <strong>PQT: </strong> Probability for Query Tags\n                </S.DescriptionVariables>\n              </Grid>\n            </S.GridContainer>\n            <S.Line />\n            <S.Title>Tabla de Priorizacion</S.Title>\n            <S.Line />\n            <PriorityAtentionComponent info={info} />\n          </section>\n        </S.Wrapper>\n      )}\n    </>\n  );\n};\n\nexport default MainPageComponent;\n","import { useEffect, useState } from \"react\";\nimport { extractVulns } from \"../../util\";\n\nexport const ExtractData = (ip) => {\n  const [vuln, setVuln] = useState([]);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const apiKey = process.env.REACT_APP_SHODAN_API_KEY;\n    const url = \"https://api.shodan.io/shodan/host/\" + ip + \"?key=\" + apiKey;\n    fetch(url)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          // setIsLoaded(true);\n          if (typeof result.vulns != \"undefined\") {\n            setVuln(result);\n            const local = extractVulns(result.data, result.vulns);\n            setData(local);\n          }\n        },\n        // Nota: es importante manejar errores aquí y no en\n        // un bloque catch() para que no interceptemos errores\n        // de errores reales en los componentes.\n        (error) => {\n          // setIsLoaded(true);\n          console.log(error);\n        }\n      );\n  }, [ip]);\n  return { vuln, data };\n};\n","import styled from \"styled-components\";\r\nimport { Container, AppBar } from \"@material-ui/core\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nexport const Header = styled(AppBar)`\r\n  padding-top: 1em;\r\n  padding-bottom: 1em;\r\n  background-color: white !important;\r\n`;\r\n\r\nexport const Wrapper = styled(Container)`\r\n  padding: 0.5em;\r\n`;\r\n\r\nexport const Navigation = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const CustomLinkNav = styled(Link)`\r\n  color: black !important;\r\n  text-transform: uppercase;\r\n  font-size: 1em;\r\n  text-align: center;\r\n\r\n  &:hover {\r\n    border-bottom: 3px solid green;\r\n  }\r\n`;\r\nexport const ImageContainer = styled(Link)``;\r\nexport const Image = styled.img`\r\n  width: 200px;\r\n  height: 55px;\r\n`;\r\n","import React from \"react\";\n\nimport * as S from \"./header.styles.jsx\";\n\nconst Header = () => {\n  return (\n    <S.Header>\n      <S.Wrapper>\n        <S.Navigation>\n          <S.ImageContainer to=\"top\" spy={true} smooth={true}>\n            <S.Image\n              src=\"https://www.espe.edu.ec/wp-content/uploads/2018/11/espe.png\"\n              alt=\"logo\"\n            />\n          </S.ImageContainer>\n\n          <S.CustomLinkNav to=\"gi\" spy={true} smooth={true}>\n            Informacion General\n          </S.CustomLinkNav>\n          <S.CustomLinkNav to=\"vi\" spy={true} smooth={true}>\n            Informacion de Vulnerabilidades\n          </S.CustomLinkNav>\n          <S.CustomLinkNav to=\"db\" spy={true} smooth={true}>\n            Banner Detallados\n          </S.CustomLinkNav>\n          <S.CustomLinkNav to=\"pt\" spy={true} smooth={true}>\n            Tabla de Priorizacion\n          </S.CustomLinkNav>\n        </S.Navigation>\n      </S.Wrapper>\n    </S.Header>\n  );\n};\nexport default Header;\n","import styled from \"styled-components\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nexport const Footer = styled.footer`\r\n  border-top: 5px solid green;\r\n`;\r\nexport const Wrapper = styled(Container)``;\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 200px;\r\n  height: 55px;\r\n`;\r\nexport const Description = styled.p`\r\n  max-width: 300px;\r\n`;\r\n","import React from \"react\";\nimport * as S from \"./footer.styles\";\n\nconst Footer = () => {\n  return (\n    <S.Footer>\n      <S.Wrapper>\n        <S.Content>\n          <S.Image\n            src=\"https://www.espe.edu.ec/wp-content/uploads/2018/11/espe.png\"\n            alt=\"logo\"\n          />\n          <S.Description>\n            <strong>PROJECT NAME.</strong> <br />\n            Design and Implementation of the IT infrastructure and service\n            management system for the ESPE Academic CERT\n          </S.Description>\n          <S.Description>\n            <strong>© 2021 PIC-2020-ESPE-CERT.</strong> <br />\n            Todos los derechos reservados.\n          </S.Description>\n        </S.Content>\n      </S.Wrapper>\n    </S.Footer>\n  );\n};\n\nexport default Footer;\n","import MainPageComponent from \"./Pages/MainPage/main-page.component\";\r\nimport Header from \"./components/header/header.component\";\r\nimport Footer from \"./components/footer/footer.component\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <MainPageComponent />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}